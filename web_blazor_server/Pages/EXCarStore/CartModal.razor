@using System.Globalization
<!-- Modal trigger button -->
<button type="button" class="btn btn-primary btn-lg" data-bs-toggle="modal" data-bs-target="#modal-cart">
    <i class="fa fa-cart-plus"></i> Cart(@lstCartItem.Sum(p=>p.Quantity))
</button>
<!-- Modal Body -->
<!-- if you want to close by clicking outside the modal, delete the last endpoint:data-bs-backdrop and data-bs-keyboard -->
<div class="modal fade" id="modal-cart" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog"
    aria-labelledby="modalTitleId" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitleId">
                    Cart
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Name</th>
                            <th>Img</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <th>Total</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (CartItemVM item in lstCartItem)
                        {
                            <tr>
                                <td>@item.Id</td>
                                <td>@item.Name</td>
                                <td>
                                    <img src="@item.Img" width="50" height="50" alt="red-car" />
                                </td>
                                <td>@item.Price.ToString("N", CultureInfo.GetCultureInfo("en-US"))</td>
                                <td>
                                    @* @item.Quantity *@
                                    <input class="text-center w-50 form-control d-inline-block" type="number" min="0" step="1" value="@item.Quantity" @onchange ="@(e=>ChangeQuantity(e, item))" >
                                </td>
                                @{double total = item.Price * item.Quantity;}
                                <td>
                                    @total.ToString("N", CultureInfo.GetCultureInfo("en-US"))
                                </td>
                                <td>
                                    <button class="btn btn-danger" @onclick="(e) => DeleteCart(item)">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    Close
                </button>
                <button type="button" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public List<CartItemVM> lstCartItem { get; set; }
    [Parameter]
    public EventCallback<CartItemVM> eventDeleteCart { get; set; }
    [Parameter]
    public EventCallback<CartItemVM> eventChangeQuantity { get; set; }

    void DeleteCart(CartItemVM itemVM){
        eventDeleteCart.InvokeAsync(itemVM);
    }

    void ChangeQuantity(ChangeEventArgs e, CartItemVM itemVM){
        itemVM.Quantity = Convert.ToDouble((string) e.Value);
        eventChangeQuantity.InvokeAsync(itemVM);
    }

}
